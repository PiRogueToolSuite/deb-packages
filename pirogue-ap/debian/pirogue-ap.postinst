#!/bin/bash

set -e

systemctl unmask hostapd || true
systemctl enable hostapd || true

#DEBHELPER#

# Load default values
WIFI_NETWORK_NAME=PiRogue1
WIFI_NETWORK_KEY=superlongkey
WIFI_COUNTRY_CODE=FR
ETH_IFACE=eth0
WLAN_IFACE=wlan0

if [[ -z "${PIROGUE_IMAGE_BUILD}" ]]
then
   echo "Not building an OS image - try to be smart."
   # Modify files according to system network interfaces
   ETH_IFACE=$(ip route get 1.1.1.1 | awk -- '{printf $5}')
   WLAN_IFACE=$(find /sys/class/net/ -mindepth 1 -maxdepth 1 | while read interface; do
   if [ -e "$interface/wireless" ]; then
      echo $(basename $interface)
   fi
   done | head -n1) 

   # First, try to get the current configuration from the pirogue-ctl tool
   # If the command is not found, try to load the configuration from the PiRogue configuration file
   if /usr/bin/pirogue-ctl config show --raw &> /dev/null
   then
      echo "Get information from PiRogue configuration tool"
      source <(/usr/bin/pirogue-ctl config show --raw)
   elif [ -f "/var/lib/pirogue/config/pirogue.user.env" ]
   then
      echo "Get information from PiRogue configuration file"
      source /var/lib/pirogue/config/pirogue.user.env
   fi
fi

echo "Installing the AP on ${WLAN_IFACE}, routing to ${ETH_IFACE}"

# hostapd
cat /usr/share/pirogue/ap/hostapd.conf > /etc/hostapd/hostapd.conf
sed -i "s/ETH_IFACE/${ETH_IFACE}/g" /etc/hostapd/hostapd.conf
sed -i "s/WLAN_IFACE/${WLAN_IFACE}/g" /etc/hostapd/hostapd.conf
sed -i "s/WIFI_NETWORK_NAME/${WIFI_NETWORK_NAME}/g" /etc/hostapd/hostapd.conf
sed -i "s/WIFI_NETWORK_KEY/${WIFI_NETWORK_KEY}/g" /etc/hostapd/hostapd.conf
sed -i "s/WIFI_COUNTRY_CODE/${WIFI_COUNTRY_CODE}/g" /etc/hostapd/hostapd.conf
deb-systemd-invoke restart hostapd

# dnsmasq
cat /usr/share/pirogue/ap/dnsmasq.conf > /etc/dnsmasq.conf
sed -i "s/ETH_IFACE/${ETH_IFACE}/g" /etc/dnsmasq.conf 
sed -i "s/WLAN_IFACE/${WLAN_IFACE}/g" /etc/dnsmasq.conf 
deb-systemd-invoke restart dnsmasq

# dhcpcd
cat /usr/share/pirogue/ap/dhcpcd.conf > /etc/dhcpcd.conf
sed -i "s/ETH_IFACE/${ETH_IFACE}/g" /etc/dhcpcd.conf
sed -i "s/WLAN_IFACE/${WLAN_IFACE}/g" /etc/dhcpcd.conf
deb-systemd-invoke restart dhcpcd

# firewall
if update-alternatives --query iptables 2>/dev/null|grep -qs '^Value: /usr/sbin/iptables-legacy$'
then
   echo "OS configured to use iptables legacy"
   cat /usr/share/pirogue/ap/rules.v4 > /etc/iptables/rules.v4
   sed -i "s/ETH_IFACE/${ETH_IFACE}/g" /etc/iptables/rules.v4
   sed -i "s/WLAN_IFACE/${WLAN_IFACE}/g" /etc/iptables/rules.v4

   cat /usr/share/pirogue/ap/rules.v6 > /etc/iptables/rules.v6
   sed -i "s/ETH_IFACE/${ETH_IFACE}/g" /etc/iptables/rules.v6
   sed -i "s/WLAN_IFACE/${WLAN_IFACE}/g" /etc/iptables/rules.v6

   if [[ -z "${PIROGUE_IMAGE_BUILD}" ]]
   then
      iptables-restore < /etc/iptables/rules.v4
      ip6tables-restore < /etc/iptables/rules.v6
   fi
else
   echo "OS configured to use nftables"
   cat /usr/share/pirogue/ap/nftables-pirogue.conf > /etc/nftables-pirogue.conf
   sed -i "s/ETH_IFACE/${ETH_IFACE}/g" /etc/nftables-pirogue.conf
   sed -i "s/WLAN_IFACE/${WLAN_IFACE}/g" /etc/nftables-pirogue.conf

   # Force nfstable to use /etc/nftables-pirogue.conf instead of /etc/nftables.conf
   mkdir -p /etc/systemd/system/nftables.service.d
   echo "[Service]" > /etc/systemd/system/nftables.service.d/override.conf
   echo "ExecStart=" >> /etc/systemd/system/nftables.service.d/override.conf
   echo "ExecReload=" >> /etc/systemd/system/nftables.service.d/override.conf
   echo "ExecStart=/usr/sbin/nft -f /etc/nftables-pirogue.conf" >> /etc/systemd/system/nftables.service.d/override.conf
   echo "ExecReload=/usr/sbin/nft -f /etc/nftables-pirogue.conf" >> /etc/systemd/system/nftables.service.d/override.conf

   systemctl daemon-reload || true
   systemctl enable nftables.service || true

   if [[ -z "${PIROGUE_IMAGE_BUILD}" ]]
   then
      deb-systemd-invoke start nftables.service
   fi
fi