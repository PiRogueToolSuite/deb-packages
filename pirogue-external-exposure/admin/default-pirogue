##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default PiRogue web server configuration
#

map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

upstream grafana {
  server localhost:3000;
}

server {
  # Localhost binding
  listen 127.0.0.1:80 default_server;
  listen [::1]:80 default_server;

  root /usr/share/pirogue-external-exposure/htdocs;

  # Add index.php to the list if you are using PHP
  index index.html index.htm index.nginx-debian.html;

  server_name _;

  location / {
    # First attempt to serve request as file, then
    # as directory, then fall back to displaying a 404.
    try_files $uri $uri/ =404;
  }

  location /dashboard/ {
    proxy_set_header Host $host;
    rewrite  ^/dashboard/(.*)  /$1 break;
    proxy_pass http://grafana;
  }

  location /dashboard/api/live/ {
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
    rewrite  ^/dashboard/(.*)  /$1 break;
    proxy_pass http://grafana;
  }
}

server {
  # External network binding
  listen @EXTERNAL_ADDRESS@:80;

  # Do not remove this comment:
  # Generated for domain: @PUBLIC_DOMAIN_NAME@

  set $accessible @LAN_ACCESSIBILITY@;
  set $force_secure @FORCE_SECURE@;

  if ($accessible = false) {
    return 403;
  }

  if ($force_secure = true) {
    return 301 https://$host$request_uri;
  }

  root /usr/share/pirogue-external-exposure/htdocs;

  server_name _;

  location / {
    # First attempt to serve request as file, then
    # as directory, then fall back to displaying a 404.
    try_files $uri $uri/ =404;
  }

  location /dashboard/ {
    proxy_set_header Host $host;
    rewrite  ^/dashboard/(.*)  /$1 break;
    proxy_pass http://grafana;
  }

  location /dashboard/api/live/ {
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
    rewrite  ^/dashboard/(.*)  /$1 break;
    proxy_pass http://grafana;
  }
}

server {
  # External network binding
  listen @EXTERNAL_ADDRESS@:443 ssl;

  # Do not remove this comment:
  # Generated for domain: @PUBLIC_DOMAIN_NAME@
  set $accessible @WAN_ACCESSIBILITY@;

  if ($accessible = false) {
    return 403;
  }

  root /usr/share/pirogue-external-exposure/htdocs;

  server_name _;
  ssl_certificate @CERTIFICATE_PATH@/fullchain.pem;
  ssl_certificate_key @CERTIFICATE_PATH@/privkey.pem;

  location / {
    # First attempt to serve request as file, then
    # as directory, then fall back to displaying a 404.
    try_files $uri $uri/ =404;
  }

  location /dashboard/ {
    proxy_set_header Host $host;
    rewrite  ^/dashboard/(.*)  /$1 break;
    proxy_pass http://grafana;
  }

  location /dashboard/api/live/ {
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
    rewrite  ^/dashboard/(.*)  /$1 break;
    proxy_pass http://grafana;
  }
}

upstream pirogue-admin-daemon {
  server localhost:50051;
}

server {
  # External network binding
  listen @EXTERNAL_ADDRESS@:50051 http2 ssl;

  # Do not remove this comment:
  # Generated for domain: @PUBLIC_DOMAIN_NAME@
  set $accessible @LAN_ACCESSIBILITY@;

  if ($accessible = false) {
    return 403;
  }

  ssl_certificate @CERTIFICATE_PATH@/fullchain.pem;
  ssl_certificate_key @CERTIFICATE_PATH@/privkey.pem;

  #ssl_protocols TLSv1.2;

  location / {
    #grpc_bind $remote_addr transparent;
    grpc_pass grpc://pirogue-admin-daemon;
  }
}